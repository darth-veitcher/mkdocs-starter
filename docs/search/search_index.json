{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Introduction This project is an example skeleton for a repository with documentation supported by mkdocs and published through GitHub Pages. It can be cloned and modified to kickstart off development, removing the need for time consuming configuration of good quality docs. It supports the following: Publishing with Github Pages (using master branch and /docs ) Mkdocs material theme Dark/Light mode Customised theme Embedding of interactive draw.io diagrams Built in search across the documentation Getting Started Installation Simply clone the repository and then overwrite with your own. # clone git clone git@github.com:darth-veitcher/mkdocs-starter.git new-project # overwrite and initialise a new empty one cd new-project rm -rf .git/ git init . Replace the existing index.md with a link of your README. rm -f docs_src/index.md ln README.md docs_src/index.md Usage To build and launch the documentation the requirements have been configured as development dependencies. Install these with pipenv install --dev . Build the documentation with pipenv run mkdocs build or view a preview of the documentation with pipenv run mkdocs serve . The output from the build process is a html website in the /docs folder whereas a serve command runs a local webserver available at http://127.0.0.1:8000 for viewing of the documentation. Dependencies Python 3 Pipenv (can be installed with pip ) The project ships with a Pipfile for use with pipenv . Depending on your shell configuration this may automatically be detected and configured for you, otherwise please install the --dev requirements. Contribute Pull requests and contributions are welcome. This is designed to be a fairly minimal starter project.","title":"Introduction"},{"location":"index.html#introduction","text":"This project is an example skeleton for a repository with documentation supported by mkdocs and published through GitHub Pages. It can be cloned and modified to kickstart off development, removing the need for time consuming configuration of good quality docs. It supports the following: Publishing with Github Pages (using master branch and /docs ) Mkdocs material theme Dark/Light mode Customised theme Embedding of interactive draw.io diagrams Built in search across the documentation","title":"Introduction"},{"location":"index.html#getting-started","text":"","title":"Getting Started"},{"location":"index.html#installation","text":"Simply clone the repository and then overwrite with your own. # clone git clone git@github.com:darth-veitcher/mkdocs-starter.git new-project # overwrite and initialise a new empty one cd new-project rm -rf .git/ git init . Replace the existing index.md with a link of your README. rm -f docs_src/index.md ln README.md docs_src/index.md","title":"Installation"},{"location":"index.html#usage","text":"To build and launch the documentation the requirements have been configured as development dependencies. Install these with pipenv install --dev . Build the documentation with pipenv run mkdocs build or view a preview of the documentation with pipenv run mkdocs serve . The output from the build process is a html website in the /docs folder whereas a serve command runs a local webserver available at http://127.0.0.1:8000 for viewing of the documentation.","title":"Usage"},{"location":"index.html#dependencies","text":"Python 3 Pipenv (can be installed with pip ) The project ships with a Pipfile for use with pipenv . Depending on your shell configuration this may automatically be detected and configured for you, otherwise please install the --dev requirements.","title":"Dependencies"},{"location":"index.html#contribute","text":"Pull requests and contributions are welcome. This is designed to be a fairly minimal starter project.","title":"Contribute"},{"location":"drawio.html","text":"Embedding draw.io The template for this project has a modified footer which can be found at docs_src/theme/partials/footer.html . This draws on the excellent work by sakumikko and loads a javascript viewer for interactively rendering any linked draw.io xml file in the browser. No need to export or convert diagrams to svg/png. To use draw.io diagrams inside the documentation use the following syntax. < div class = \"dynamic-graph\" data-mxgraph-path = \"mydiagram.drawio\" ></ div > It will show up as per below. File locations The .drawio file is passed in as data-mxgraph-path relative to the documentation root. For example a simple, flat structure like this results in data-mxgraph-path=\"gcp.drawio\" (because it is at the root of the site with the index). docs_src \u251c\u2500\u2500 drawio.md \u251c\u2500\u2500 gcp.drawio \u251c\u2500\u2500 index.md \u2514\u2500\u2500 theme \u2514\u2500\u2500 partials \u2514\u2500\u2500 footer.html If you structure the documentation (like me) with folders associated with resources then this becomes data-mxgraph-path=\"diagrams/gcp.drawio\" docs_src \u251c\u2500\u2500 diagrams \u2502 \u2514\u2500\u2500 gcp.drawio \u251c\u2500\u2500 drawio.md \u251c\u2500\u2500 index.md \u2514\u2500\u2500 theme \u2514\u2500\u2500 partials \u2514\u2500\u2500 footer.html","title":"Embed draw.io"},{"location":"drawio.html#embedding-drawio","text":"The template for this project has a modified footer which can be found at docs_src/theme/partials/footer.html . This draws on the excellent work by sakumikko and loads a javascript viewer for interactively rendering any linked draw.io xml file in the browser. No need to export or convert diagrams to svg/png. To use draw.io diagrams inside the documentation use the following syntax. < div class = \"dynamic-graph\" data-mxgraph-path = \"mydiagram.drawio\" ></ div > It will show up as per below.","title":"Embedding draw.io"},{"location":"drawio.html#file-locations","text":"The .drawio file is passed in as data-mxgraph-path relative to the documentation root. For example a simple, flat structure like this results in data-mxgraph-path=\"gcp.drawio\" (because it is at the root of the site with the index). docs_src \u251c\u2500\u2500 drawio.md \u251c\u2500\u2500 gcp.drawio \u251c\u2500\u2500 index.md \u2514\u2500\u2500 theme \u2514\u2500\u2500 partials \u2514\u2500\u2500 footer.html If you structure the documentation (like me) with folders associated with resources then this becomes data-mxgraph-path=\"diagrams/gcp.drawio\" docs_src \u251c\u2500\u2500 diagrams \u2502 \u2514\u2500\u2500 gcp.drawio \u251c\u2500\u2500 drawio.md \u251c\u2500\u2500 index.md \u2514\u2500\u2500 theme \u2514\u2500\u2500 partials \u2514\u2500\u2500 footer.html","title":"File locations"}]}